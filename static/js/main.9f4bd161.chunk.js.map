{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","placeHolderText","App","state","markdown","changeHandler","setState","className","htmlFor","name","rows","cols","onChange","e","target","value","dangerouslySetInnerHTML","__html","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","application","StrictMode","basename","ReactDOM","render","document","getElementById"],"mappings":"yRAGIA,EAASC,EAAQ,IAEfC,EAAe,uoCAsFNC,E,4MA5CbC,MAAQ,CACNC,SAAUH,G,EAGZI,cAAgB,SAACD,GACf,EAAKE,SAAS,CAAEF,c,4CAElB,WAAU,IAAD,OACP,OACE,qBAAKG,UAAU,MAAf,SAEE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,uBAAOC,QAAQ,SACf,0BACEC,KAAK,OACLF,UAAU,OACVG,KAAK,KACLC,KAAK,KACLC,SAAU,SAACC,GACT,EAAKR,cAAcQ,EAAEC,OAAOC,QANhC,SASGd,OAIL,sBAAKM,UAAU,WAAf,UACE,oBAAIA,UAAU,cAAd,qBACA,sBAAKA,UAAU,UAAf,UACE,qBACES,wBAAyB,CACvBC,OAAQlB,EAAOmB,KAAKf,MAAMC,aAEtB,mB,GApCJe,aClCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,EAAc,cAAC,IAAMC,WAAP,UACpB,cAAC,IAAD,CAAQC,SAAS,sBAAjB,SACA,cAAC,EAAD,QAIAC,IAASC,OACPJ,EACAK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.9f4bd161.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nlet marked = require(\"marked\");\n\nconst placeHolderText = `# Welcome to my React Markdown Previewer!\n\n// ## This is a sub-heading...\n// ### And here's some other cool stuff:\n\n// Heres some code, \\`<div></div>\\`, between 2 backticks.\n\n// \\`\\`\\`\n// // this is multi-line code:\n\n// function anotherExample(firstLine, lastLine) {\n//   if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n//     return multiLineCode;\n//   }\n// }\n// \\`\\`\\`\n\n// You can also make text **bold**... whoa!\n// Or _italic_.\n// Or... wait for it... **_both!_**\n// And feel free to go crazy ~~crossing stuff out~~.\n\n// There's also [links](https://www.freecodecamp.org), and\n// > Block Quotes!\n\n// And if you want to get really crazy, even tables:\n\n// Wild Header | Crazy Header | Another Header?\n// ------------ | ------------- | -------------\n// Your content can | be here, and it | can be here....\n// And here. | Okay. | I think we get it.\n\n// - And of course there are lists.\n//   - Some are bulleted.\n//      - With different indentation levels.\n//         - That look like this.\n\n// 1. And there are numbered lists too.\n// 1. Use just 1s if you want!\n// 1. And last but not least, let's not forget embedded images:`;\n\nclass App extends Component {\n  state = {\n    markdown: placeHolderText,\n  };\n\n  changeHandler = (markdown) => {\n    this.setState({ markdown });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n\n        <div className=\"flex-container\">\n          <div className=\"input\">\n            <h3 className=\"inputHeader\">Input</h3>\n            <label htmlFor=\"area\"></label>\n            <textarea\n              name=\"area\"\n              className=\"area\"\n              rows=\"35\"\n              cols=\"50\"\n              onChange={(e) => {\n                this.changeHandler(e.target.value);\n              }}\n            >\n              {placeHolderText}\n            </textarea>\n          </div>\n\n          <div className=\"markdown\">\n            <h3 className=\"inputHeader\">Preview</h3>\n            <div className=\"preview\">\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: marked(this.state.markdown),\n                }}\n              ></div>{\" \"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport './index.css'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst application = <React.StrictMode>\n<Router basename='/markdown-previewer'>\n<App />\n</Router>\n</React.StrictMode>\n\nReactDOM.render(\n  application,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}